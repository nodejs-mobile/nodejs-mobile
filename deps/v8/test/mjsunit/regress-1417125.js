// Copyright 2023 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Flags: --allow-natives-syntax --no-lazy-feedback-allocation
// Flags: --single-threaded --deopt-to-baseline
// Flags: --no-maglev --always-turbofan


function foo() {
  try {
     foo();
     String.fromCharCode(48,2268268757,48,59,25000,102,111,8,116,45,119,101,105,103,104,116,58,98,111,108,100,59,8,111,8,3394964672,2268268757,102,97,109,105,108,121,58,65,114,3746,97,108,44,32,72,101,8,8,101,116,105,8,97,44,3746,115,10000,110,115,45,25000,101,114,105,8,44,86,101,8,8,1,110,3746,34,32,99,111,108,111,4294967295,16,34,35,8,70,48,4294967295,4294967295,48,34,8,3746,79,82,69,88,47,80,65,82,38,35,1,48,52,59,8,8,25000,3394964672,-1745691656,47,62,84,4294967295,32,38,35,8,48,52,59,38,35,51,53,48,4003,76,4294967295,77,76,8,8,38,35,51,48,52,59,60,47,10000,111,110,116,62,60,47,25000,10000,97,110,25000,25000,47,116,-1745691656,62,10,8,3746,116,114,62,60,116,4294967295,3746,10,8,116,8,32,97,108,105,103,110,2268268757,34,108,101,3746,116,8,62,60,115,112,97,110,8,105,100,8,34,97,99,95,100,101,4294967295,99,34,62,60,102,111,8,8,32,115,8,121,108,3394964672,61,34,8,111,3394964672,116,45,115,25000,122,4003,16,8,49,4294967295,120,59,32,99,8,108,8,114,3746,4003,48,48,48,48,48,3746,59,32,4003,111,110,116,2268268757,102,97,109,105,108,121,8,8,4294967295,105,97,8,44,32,16,101,108,4294967295,101,116,105,99,3746,44,32,115,97,110,4294967295,45,3746,101,2268268757,105,102,44,86,101,114,100,3746,110,97,34,16,38,112,16,117,8,100,59,47,36,32,50,25000,112,10000,112,44,32,89,84,8,32,49,3746,32,25000,105,112,44,65,-1745691656,116,38,35,51,48,53,1,110,32,8,32,99,8,110,116,46,4003,8,8,98,2,116,32,83,112,114,101,97,100,45,84,38,117,-1745691656,109,108,59,114,60,3746,4294967295,114,32,47,8,107,32,66,97,110,8,97,115,38,35,2268268757,48,53,59,32,65,86,65,4003,2268268757,65,74,73,3394964672,2,102,111,110,116,62,60,8,115,112,97,110,62,60,16,116,100,4294967295,10,60,16,116,114,2268268757,2268268757,4294967295,114,62,10,60,116,100,32,97,108,105,103,110,61,8,108,101,102,116,34,62,3394964672,100,105,118,32,25000,100,61,8,97,99,95,117,2,108,2268268757,8,60,102,3394964672,110,116,3746,8,8,3746,108,101,61,4294967295,102,111,110,116,45,115,105,4294967295,101,8,49,48,112,120,59,32,3746,111,108,111,114,58,35,70,70,54,54,57,2,59,32,3746,111,110,4294967295,45,102,0,109,105,10000,121,58,65,114,105,8,108,44,32,72,101,108,3394964672,101,10000,8,99,97,44,32,115,97,110,115,8,115,101,8,16,4294967295,44,86,16,114,100,97,110,8,34,8,119,4294967295,119,46,104,101,100,101,118,111,8,119,98,114,3746,4003,62,3394964672,108,8,3746,101,46,99,3746,109,60,47,102,2268268757,110,16,62,60,4294967295,8,105,118,62,25000,47,0,100,62,8,47,116,16,62,60,47,116,97,8,108,101,62,60,8,116,100,62,60,-1745691656,116,114,62,60,8,-1745691656,62,10,60,116,100,32,99,8,97,4294967295,2268268757,61,34,97,99,95,107,97,3746,105,109,34,32,104,101,2268268757,103,104,8,61,34,50,48,37,34,32,98,8,99,-1745691656,108,111,114,61,2268268757,8,70,70,70,4294967295,70,1,34,32,105,100,61,34,116,97,119,52,34,32,97,108,105,103,110,61,34,108,8,102,116,3746,32,118,97,4294967295,105,8,110,61,34,109,105,100,8,108,3746,34,32,111,8,70,111,99,117,4294967295,4003,8,115,115,40,16,103,111,32,116,111,32,119,119,119,0,107,97,108,101,8,101,60,119,98,3746,0,47,62,46,99,111,109,39,44,25000,97,119,52,39,4294967295,34,32,111,110,77,111,117,115,1,-1745691656,118,3746,3746,61,34,115,3746,40,8,10000,8,32,116,111,32,119,3746,119,46,107,97,108,101,100,101,60,119,98,114,32,-1745691656,62,46,99,111,8,39,8,39,97,119,8,8,41,34,32,32,2,110,77,111,117,115,8,79,117,116,61,34,99,8,8,41,34,4294967295,25000,110,8,108,105,1,107,61,34,103,97,40,39,10000,8,116,112,58,4294967295,47,8,100,115,101,2268268757,4294967295,101,114,46,109,121,110,101,8,3746,99,111,109,1,65,100,83,101,114,118,101,8,47,99,25000,105,99,107,46,106,4294967295,4003,63,117,114,2268268757,8,3746,3394964672,49,48,4294967295,50,53,49,50,1,55,54,51,2268268757,52,4294967295,3394964672,51,49,8,52,3746,48,10000,57,54,48,48,54,51,49,4294967295,54,54,52,52,56,8,56,4003,50,48,8,49,8,52,55,51,55,54,52,51,50,57,4294967295,52,50,8,51,8,8,51,54,16,48,48,48,3746,8,56,49,55,50,8,57,53,48,8,2268268757,49,57,48,54,3746,56,55,50,4294967295,49,55,48,55,53,48,57,50,55,8,55,57,57,51,3746,53,50,52,54,49,51,56,49,57,53,55,8,2,50,8,8,50,55,0,48,8,53,57,56,8,8,50,55,48,4294967295,8,51,49,54,52,1,54,8,53,48,56,57,50,25000,54,4294967295,48,8,49,54,4294967295,25000,57,48,57,49,8,57,8,55,52,55,8,50,48,55,1,4294967295,51,51,25000,51,50,55,2268268757,50,54,55,50,3746,48,51,57,49,8,54,0,8,55,8,51,55,3394964672,52,51,49,51,52,8,56,51,54,51,52,53,8,3746,3746,53,57,48,8,48,56,54,57,49,52,53,49,49,52,4294967295,53,50,120,49,57,50,88,49,8,2,88,8,56,88,2268268757,49,88,56,48,56,48,88,8,39,41,8,0,2268268757,116,1,108,3746,61,34,99,117,114,115,111,114,58,4294967295,3394964672,105,110,116,101,114,34,8,1,8,116,97,98,108,101,32,119,105,25000,116,104,61,34,49,53,54,34,32,98,111,114,100,101,114,61,4294967295,48,34,32,99,101,108,8,115,112,97,99,105,110,103,61,34,49,34,32,99,101,8,108,2,97,100,100,105,110,8,3746,8,49,34,62,10,3746,116,114,62,2268268757,32,32,60,-1745691656,3394964672,32,97,8,105,103,110,61,34,3394964672,101,102,2,34,32,62,3394964672,8,112,97,4003,32,105,0,61,34,97,99,95,116,105,116,108,101,4294967295,62,60,102,111,110,116,32,115,116,8,108,101,61,34,102,111,110,116,8,115,8,122,101,58,8,50,3746,120,59,8,99,111,108,111,114,2268268757,8,70,70,48,48,3746,8,59,2268268757,102,8,110,4294967295);
   } catch {
     %DeoptimizeNow();
   }
}
foo.valueOf = foo;
42 > foo;
foo();
