node:assert:*
    throw newErr;
    ^

AssertionError [ERR_ASSERTION]: ifError got unwanted exception: test error
    at z (*if-error-has-good-stack.js:*:*
    at y (*if-error-has-good-stack.js:*:*)
    at x (*if-error-has-good-stack.js:*:*)
    at Object.<anonymous> (*if-error-has-good-stack.js:*:*)
    at c (*if-error-has-good-stack.js:*:*)
    at b (*if-error-has-good-stack.js:*:*)
    at a (*if-error-has-good-stack.js:*:*)
    at Object.<anonymous> (*if-error-has-good-stack.js:*:*)
    at Module._compile (node:internal/modules/cjs/loader:*:*)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:*:*)
    at Module.load (node:internal/modules/cjs/loader:*:*)
    at Function.Module._load (node:internal/modules/cjs/loader:*:*)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:*:*)
    at node:internal/main/run_main_module:*:* {
  generatedMessage: false,
  code: 'ERR_ASSERTION',
  actual: Error: test error
      at c (*if-error-has-good-stack.js:*:*)
      at b (*if-error-has-good-stack.js:*:*)
      at a (*if-error-has-good-stack.js:*:*)
      at Object.<anonymous> (*if-error-has-good-stack.js:*:*)
      at Module._compile (node:internal/modules/cjs/loader:*:*)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:*:*)
      at Module.load (node:internal/modules/cjs/loader:*:*)
      at Function.Module._load (node:internal/modules/cjs/loader:*:*)
      at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:*:*)
      at node:internal/main/run_main_module:*:*
  expected: null,
  operator: 'ifError'
}
